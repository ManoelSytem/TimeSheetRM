@model List<TimeSheet.ViewModel.ViewModelCadastroHora>

@{
    ViewData["Title"] = "Cadastro de Jornada";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if (TempData["JornadaCadastrada"] != null)
{
    <div class="card">
        <div class="body">
            <div class="alert alert-success">
                <strong>Cadastro realizado com sucesso!</strong>
            </div>
        </div>
    </div>
}
@if (TempData["exclusao"] != null)
{
    <div class="card">
        <div class="body">
            <div class="alert alert-success">
                <strong>Jornada excluída com sucesso!</strong>
            </div>
        </div>
    </div>
}
@if (TempData["Createfalse"] != null)
{
    <div class="card">
        <div class="alert alert-danger">
            <strong><font style="vertical-align: inherit;"><font style="vertical-align: inherit;">Erro.  </font></font></strong><font style="vertical-align: inherit;">
                <font style="vertical-align: inherit;">
                    @TempData["Createfalse"].ToString();
                </font>
            </font>
        </div>
    </div>
}
<div class="card azulc-azule">
    <div class="card-header">
        @ViewBag.Title
    </div>
    <div class="card-body">
        <table id="tbCabecalhoMarcacao" class="table table-striped table-bordered table-hover responsive nowrap" cellspacing="0" width="100%">
            <thead>
                <tr>
                    <th>Código</th>
                    <th>Descrição da Jornada</th>
                    <th>Período da Jornada</th>
                    <th>Ações</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.Codigo)</td>
                            <td>@Html.DisplayFor(modelItem => item.DescJornada)</td>
                            <td>@item.DataInicio?.ToString("dd/MM/yyyy")    até    @item.DataFim?.ToString("dd/MM/yyyy") </td>
                            <td>
                                <button type="button" class="btn btn-sm btn-visualizar" name="visualizar" onclick="location.href='@Url.Action("Details", "JornadaTrabalho", new { id = item.Codigo})'"><i class="fas fa-eye"></i></button>
                                <button type="button" class="btn btn-sm btn-editar" name="editar" onclick="location.href='@Url.Action("Edit", "JornadaTrabalho", new { id = item.Codigo})'"><i class="fas fa-pen"></i></button>
                                <button type="button" class="btn btn-sm btn-excluir" name="excluir" onclick="location.href='@Url.Action("Delete", "JornadaTrabalho", new { id = item.Codigo})'"><i class="fas fa-trash"></i></button>
                            </td>
                        </tr>

                    }
                }
            </tbody>
        </table>
    </div>
</div>

<div class="btn-ft">
    <input type="checkbox" href="#" class="btn-ft-open" name="btn-ft-open" id="btn-ft-open" />
    <label class="btn-ft-item-open" for="btn-ft-open">
        <span><i class="fas fa-plus"></i></span>
    </label>
    <a href="@Url.Action("CadastrarHora", "JornadaTrabalho")" class="btn-ft-item" tooltip="Cadastrar Horas"><i class="fas fa-plus"></i></a>
</div>

<script>
    $('#tbCabecalhoMarcacao').DataTable({
        "lengthMenu": [[10, 25, 50, -1], [10, 25, 50, "Todos"]],
        "columnDefs": [
            { className: "text-left", "targets": [0, 1] },
            { "orderable": false, "targets": [2] }
        ],
        "language": {
            "decimal": "",
            "emptyTable": "Nenhum registro disponível na tabela",
            "info": "Visualizando _START_ de _END_ de _TOTAL_ registros",
            "infoEmpty": "Visualizando 0 de 0 de 0 registros",
            "infoFiltered": "(filtered from _MAX_ total entries)",
            "infoPostFix": "",
            "thousands": ",",
            "lengthMenu": "Mostrar _MENU_ registros",
            "loadingRecords": "Carregando...",
            "processing": "Processando...",
            "search": "Pesquisar:",
            "zeroRecords": "Nenhum registro correspondente encontrado",
            "paginate": {
                "first": "Primeira",
                "last": "Última",
                "next": "Próxima",
                "previous": "Anterior"
            }
        },
    });
</script>
